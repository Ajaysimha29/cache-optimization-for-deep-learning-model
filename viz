import matplotlib.pyplot as plt
import numpy as np

# Data for visualization
cycles = ['Cycle 1', 'Cycle 2', 'Cycle 3', 'Cycle 4']

# Adding missing time data
lru_times = [26.51, 14.69, 14.53, 27.93]
lfu_times = [14.37, 14.24, 14.77, 28.41]
random_times = [14.43, 15.10, 14.78, 28.96]

lru_hits = [0, 0, 50, 1248]
lfu_hits = [0, 0, 55, 57]
random_hits = [0, 0, 49, 1179]
lru_misses = [1200, 1200, 1200, 1200]
lfu_misses = [1200, 1200, 1195, 2391]
random_misses = [1200, 1200, 1201, 1269]

# Adding hit ratios for each policy
lru_hit_ratios = [0.00, 0.00, 4.00, 50.98]
lfu_hit_ratios = [0.00, 0.00, 4.40, 2.33]
random_hit_ratios = [0.00, 0.00, 3.92, 48.16]

# Plotting the data with hits and misses
fig, ax1 = plt.subplots(figsize=(12, 7))

# Plotting execution times
ax1.set_xlabel('Cycles')
ax1.set_ylabel('Time (sec)', color='tab:blue')
ax1.plot(cycles, lru_times, label='LRU Cache Time', color='tab:blue', marker='o')
ax1.plot(cycles, lfu_times, label='LFU Cache Time', color='tab:cyan', marker='o')
ax1.plot(cycles, random_times, label='Random Cache Time', color='tab:purple', marker='o')
ax1.tick_params(axis='y', labelcolor='tab:blue')

# Creating a second y-axis for hit ratios, hits, and misses
ax2 = ax1.twinx()
ax2.set_ylabel('Hit Ratio / Hits / Misses', color='tab:red')
ax2.plot(cycles, lru_hit_ratios, label='LRU Cache Hit Ratio', color='tab:red', linestyle='--', marker='x')
ax2.plot(cycles, lfu_hit_ratios, label='LFU Cache Hit Ratio', color='tab:orange', linestyle='--', marker='x')
ax2.plot(cycles, random_hit_ratios, label='Random Cache Hit Ratio', color='tab:pink', linestyle='--', marker='x')

# Plotting hits and misses
ax2.plot(cycles, lru_hits, label='LRU Cache Hits', color='tab:green', marker='s')
ax2.plot(cycles, lfu_hits, label='LFU Cache Hits', color='tab:olive', marker='s')
ax2.plot(cycles, random_hits, label='Random Cache Hits', color='tab:gray', marker='s')

ax2.plot(cycles, lru_misses, label='LRU Cache Misses', color='tab:orange', marker='d')
ax2.plot(cycles, lfu_misses, label='LFU Cache Misses', color='tab:brown', marker='d')
ax2.plot(cycles, random_misses, label='Random Cache Misses', color='tab:cyan', marker='d')

ax2.tick_params(axis='y', labelcolor='tab:red')

# Adding legends
fig.tight_layout()
ax1.legend(loc='upper left')
ax2.legend(loc='center')

plt.title('Cache Performance Across Cycles (Time, Hit Ratio, Hits, and Misses)')
plt.show()
